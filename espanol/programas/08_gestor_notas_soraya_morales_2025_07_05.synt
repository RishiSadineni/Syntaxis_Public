#!/usr/bin/env python3
# -*- coding: utf-8 -*-

# Gestor de notas
# Autor: Soraya Morales
# Fecha: 2025-07-05

import datetime

# Lista global de notas
notas = []

definir crear_nota(titulo, contenido, categoria="general"):
    nota = {
        "id": longitud(notas) + 1,
        "titulo": titulo,
        "contenido": contenido,
        "categoria": categoria,
        "fecha_creacion": datetime.datetime.now().strftime("%Y-%m-%d %H:%M:%S"),
        "favorita": falso
    }
    notas.append(nota)
    imprimir(f"Nota creada: {titulo}")
    retornar nota["id"]

definir mostrar_notas():
    si longitud(notas) == 0:
        imprimir("No hay notas guardadas")
        retornar
    
    imprimir("\n=== MIS NOTAS ===")
    para nota en notas:
        favorita = "⭐" si nota["favorita"] sino "  "
        imprimir(f"{favorita} [{nota['id']}] {nota['titulo']} - {nota['categoria']}")
        imprimir(f"   Creada: {nota['fecha_creacion']}")

definir ver_nota(id_nota):
    para nota en notas:
        si nota["id"] == id_nota:
            imprimir(f"\n=== {nota['titulo'].upper()} ===")
            imprimir(f"Categoría: {nota['categoria']}")
            imprimir(f"Fecha: {nota['fecha_creacion']}")
            imprimir(f"Favorita: {'Sí' si nota['favorita'] sino 'No'}")
            imprimir(f"\nContenido:")
            imprimir(nota['contenido'])
            retornar
    imprimir("Nota no encontrada")

definir editar_nota(id_nota):
    para nota en notas:
        si nota["id"] == id_nota:
            imprimir(f"Editando nota: {nota['titulo']}")
            
            nuevo_titulo = entrada(f"Nuevo título ({nota['titulo']}): ")
            nuevo_contenido = entrada(f"Nuevo contenido:\n{nota['contenido']}\nNuevo: ")
            nueva_categoria = entrada(f"Nueva categoría ({nota['categoria']}): ")
            
            si nuevo_titulo:
                nota['titulo'] = nuevo_titulo
            si nuevo_contenido:
                nota['contenido'] = nuevo_contenido
            si nueva_categoria:
                nota['categoria'] = nueva_categoria
                
            imprimir("Nota actualizada exitosamente")
            retornar
    imprimir("Nota no encontrada")

definir eliminar_nota(id_nota):
    para i, nota en enumerate(notas):
        si nota["id"] == id_nota:
            nota_eliminada = notas.pop(i)
            imprimir(f"Nota eliminada: {nota_eliminada['titulo']}")
            retornar
    imprimir("Nota no encontrada")

definir marcar_favorita(id_nota):
    para nota in notas:
        si nota["id"] == id_nota:
            nota["favorita"] = no nota["favorita"]
            estado = "marcada como favorita" si nota["favorita"] sino "desmarcada como favorita"
            imprimir(f"Nota {estado}: {nota['titulo']}")
            retornar
    imprimir("Nota no encontrada")

definir buscar_notas(termino):
    resultados = []
    para nota en notas:
        si (termino.lower() en nota['titulo'].lower() o 
            termino.lower() en nota['contenido'].lower() or
            termino.lower() en nota['categoria'].lower()):
            resultados.append(nota)
    retornar resultados

definir menu_notas():
    mientras verdadero:
        imprimir("\n=== GESTOR DE NOTAS ===")
        imprimir("1. Crear nota")
        imprimir("2. Ver todas las notas")
        imprimir("3. Ver nota específica")
        imprimir("4. Editar nota")
        imprimir("5. Eliminar nota")
        imprimir("6. Marcar/desmarcar favorita")
        imprimir("7. Buscar notas")
        imprimir("8. Salir")
        
        opcion = entrada("Elige una opción (1-8): ")
        
        si opcion == "1":
            titulo = entrada("Título de la nota: ")
            contenido = entrada("Contenido de la nota:\n")
            categoria = entrada("Categoría (opcional): ")
            crear_nota(titulo, contenido, categoria)
        sino_si opcion == "2":
            mostrar_notas()
        sino_si opcion == "3":
            mostrar_notas()
            id_nota = entero(entrada("ID de la nota a ver: "))
            ver_nota(id_nota)
        sino_si opcion == "4":
            mostrar_notas()
            id_nota = entero(entrada("ID de la nota a editar: "))
            editar_nota(id_nota)
        sino_si opcion == "5":
            mostrar_notas()
            id_nota = entero(entrada("ID de la nota a eliminar: "))
            eliminar_nota(id_nota)
        sino_si opcion == "6":
            mostrar_notas()
            id_nota = entero(entrada("ID de la nota a marcar/desmarcar: "))
            marcar_favorita(id_nota)
        sino_si opcion == "7":
            termino = entrada("Término de búsqueda: ")
            resultados = buscar_notas(termino)
            si resultados:
                imprimir(f"Encontradas {longitud(resultados)} notas:")
                para nota en resultados:
                    imprimir(f"- [{nota['id']}] {nota['titulo']}")
            sino:
                imprimir("No se encontraron notas")
        sino_si opcion == "8":
            imprimir("¡Hasta luego!")
            romper
        sino:
            imprimir("Opción no válida")

# Crear algunas notas de ejemplo
crear_nota("Mi primera nota", "Esta es mi primera nota en el gestor.", "personal")
crear_nota("Lista de compras", "Leche, pan, huevos, frutas", "compras")
crear_nota("Ideas de proyecto", "Crear una aplicación web, aprender Django", "proyectos")

# Ejecutar el programa
si __name__ == "__main__":
    menu_notas()


